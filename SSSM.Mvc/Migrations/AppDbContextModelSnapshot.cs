// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SSSM.Common.Infrastructure;

namespace SSSM.Common.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("CourseModelStudentModel", b =>
                {
                    b.Property<long>("CoursesId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("StudentsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CoursesId", "StudentsId");

                    b.HasIndex("StudentsId");

                    b.ToTable("CourseModelStudentModel");
                });

            modelBuilder.Entity("SSSM.Mvc.Models.CourseModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("MajorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MajorId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("SSSM.Mvc.Models.MajorModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<long?>("ParentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Majors");
                });

            modelBuilder.Entity("SSSM.Mvc.Models.SchoolClassModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<long?>("SchoolGradeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SchoolGradeId");

                    b.ToTable("schoolClasses");
                });

            modelBuilder.Entity("SSSM.Mvc.Models.SchoolGradeModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("schoolGrades");
                });

            modelBuilder.Entity("SSSM.Mvc.Models.StudentCourseMapModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("CourseId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("StudentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentCourseMaps");
                });

            modelBuilder.Entity("SSSM.Mvc.Models.StudentModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EnrollmentDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Gender")
                        .HasColumnType("INTEGER");

                    b.Property<string>("IDNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("InnerCode")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("MajorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("TEXT");

                    b.Property<long?>("SchoolClassId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MajorId");

                    b.HasIndex("SchoolClassId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("CourseModelStudentModel", b =>
                {
                    b.HasOne("SSSM.Mvc.Models.CourseModel", null)
                        .WithMany()
                        .HasForeignKey("CoursesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SSSM.Mvc.Models.StudentModel", null)
                        .WithMany()
                        .HasForeignKey("StudentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SSSM.Mvc.Models.CourseModel", b =>
                {
                    b.HasOne("SSSM.Mvc.Models.MajorModel", "Major")
                        .WithMany("Courses")
                        .HasForeignKey("MajorId");

                    b.Navigation("Major");
                });

            modelBuilder.Entity("SSSM.Mvc.Models.MajorModel", b =>
                {
                    b.HasOne("SSSM.Mvc.Models.MajorModel", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("SSSM.Mvc.Models.SchoolClassModel", b =>
                {
                    b.HasOne("SSSM.Mvc.Models.SchoolGradeModel", "SchoolGrade")
                        .WithMany("SchoolClasses")
                        .HasForeignKey("SchoolGradeId");

                    b.Navigation("SchoolGrade");
                });

            modelBuilder.Entity("SSSM.Mvc.Models.StudentCourseMapModel", b =>
                {
                    b.HasOne("SSSM.Mvc.Models.CourseModel", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId");

                    b.HasOne("SSSM.Mvc.Models.StudentModel", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId");

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SSSM.Mvc.Models.StudentModel", b =>
                {
                    b.HasOne("SSSM.Mvc.Models.MajorModel", "Major")
                        .WithMany()
                        .HasForeignKey("MajorId");

                    b.HasOne("SSSM.Mvc.Models.SchoolClassModel", "SchoolClass")
                        .WithMany()
                        .HasForeignKey("SchoolClassId");

                    b.Navigation("Major");

                    b.Navigation("SchoolClass");
                });

            modelBuilder.Entity("SSSM.Mvc.Models.MajorModel", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("Courses");
                });

            modelBuilder.Entity("SSSM.Mvc.Models.SchoolGradeModel", b =>
                {
                    b.Navigation("SchoolClasses");
                });
#pragma warning restore 612, 618
        }
    }
}
